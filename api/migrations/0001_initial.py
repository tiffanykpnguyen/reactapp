# Generated by Django 4.2.4 on 2024-01-12 19:12

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicineReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(max_length=256, null=True)),
                ('route_of_administration', models.CharField(choices=[('oral', 'Orally'), ('parentral/im', 'Intra-muscular'), ('parentral/sc', 'Subcutaneous'), ('parentral/iv', 'Intravenous')], max_length=256, null=True)),
                ('dosage_form', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('syrup', 'Syrup'), ('injectable', 'Injectable')], max_length=256, null=True)),
                ('dosage_unit_of_measure', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('gravimetric/mg', 'Milligram/mg'), ('gravimetric/iu', 'International Unit/iu'), ('volumetric/ml', 'Milliliter/ml')], max_length=256, null=True)),
                ('dosage_quantity_of_units_per_time', models.FloatField(null=True)),
                ('regimen_note', models.CharField(blank=True, max_length=256, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('equally_distributed_regimen', models.BooleanField(default=True, null=True)),
                ('periodic_interval', models.CharField(choices=[('daily', 'Daily Regimen'), ('weekly', 'Weekly Regimen'), ('monthly', 'Monthly Regimen')], max_length=256, null=True)),
                ('dosage_frequency', models.PositiveIntegerField(null=True)),
                ('first_time_of_intake', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('is_chronic_or_acute', models.BooleanField(default=False, null=True)),
                ('stopped_by_datetime', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
